/*
 * 
 * 
 * 
 */
package arduino_project;

import java.io.FileNotFoundException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Ryan Rusli 2201832446
 */
public class User_Interface extends javax.swing.JFrame {

    DataManager manager = new DataManager();
    public User_Interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        StartMonth = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Title_Text = new javax.swing.JTextPane();
        StartYear = new javax.swing.JTextField();
        EndMonth = new javax.swing.JTextField();
        StartDay = new javax.swing.JTextField();
        EndYear = new javax.swing.JTextField();
        EndDay = new javax.swing.JTextField();
        HumButt = new javax.swing.JButton();
        TempButt = new javax.swing.JButton();
        dayLabel = new javax.swing.JLabel();
        monthLabel = new javax.swing.JLabel();
        hourLabel = new javax.swing.JLabel();
        EndHour = new javax.swing.JTextField();
        StartHour = new javax.swing.JTextField();
        yearLabel = new javax.swing.JLabel();
        newDataGetter = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        label1.setText("label1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        StartMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartMonthActionPerformed(evt);
            }
        });

        Title_Text.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Title_Text.setText("Data Grapher");
        jScrollPane1.setViewportView(Title_Text);

        StartYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartYearActionPerformed(evt);
            }
        });

        EndMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndMonthActionPerformed(evt);
            }
        });

        StartDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartDayActionPerformed(evt);
            }
        });

        EndYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndYearActionPerformed(evt);
            }
        });

        EndDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndDayActionPerformed(evt);
            }
        });

        HumButt.setText("Get Humidity Graph");
        HumButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HumButtActionPerformed(evt);
            }
        });

        TempButt.setText("Get Temperature Graph");
        TempButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TempButtActionPerformed(evt);
            }
        });

        dayLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dayLabel.setText("Day");

        monthLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        monthLabel.setText("Month");

        hourLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        hourLabel.setText("Hour");

        EndHour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndHourActionPerformed(evt);
            }
        });

        StartHour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartHourActionPerformed(evt);
            }
        });

        yearLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        yearLabel.setText("Year");

        newDataGetter.setText("Get New Data");
        newDataGetter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDataGetterActionPerformed(evt);
            }
        });

        jLabel1.setText("Start");

        jLabel2.setText("End");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(StartMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(38, 38, 38)
                            .addComponent(yearLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(monthLabel)
                            .addGap(26, 26, 26))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(StartYear, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(EndYear, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                            .addComponent(EndMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 35, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(EndDay, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(EndHour, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(StartDay, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(StartHour, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(dayLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hourLabel)
                        .addGap(57, 57, 57))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(TempButt, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(HumButt, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newDataGetter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(250, 250, 250))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newDataGetter))
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthLabel)
                    .addComponent(hourLabel)
                    .addComponent(yearLabel)
                    .addComponent(dayLabel))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartDay, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StartMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StartHour, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StartYear, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EndDay, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EndMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EndHour, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EndYear, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HumButt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TempButt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StartMonthActionPerformed

    private void StartYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StartYearActionPerformed

    private void EndMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EndMonthActionPerformed

    private void StartDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StartDayActionPerformed

    private void EndYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EndYearActionPerformed

    private void EndDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EndDayActionPerformed

    private void TempButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TempButtActionPerformed
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy MM dd HH");
            
            String startDate = manager.handler.getStartData();
            String endDate = manager.handler.getEndData();
            
            Date sDatabaseDate = sdf.parse(startDate);
            Date eDatabaseDate = sdf.parse(endDate);
                       
            String sYear = StartYear.getText();
            String sMonth = StartMonth.getText();
            String sDay = StartDay.getText();
            String sHour = StartHour.getText();
            
            String eYear = EndYear.getText();
            String eMonth = EndMonth.getText();
            String eDay = EndDay.getText();
            String eHour = EndHour.getText();
            
            String sIDate = sYear + " " + sMonth + " " + sDay + " " + sHour;
            String eIDate = eYear + " " + eMonth + " " + eDay + " " + eHour;
                    
            Date sInputDate = sdf.parse(sIDate);
            Date eInputDate = sdf.parse(eIDate);
            
            System.out.println(sInputDate + "     " + sDatabaseDate);
            System.out.println(eInputDate + "     " + eDatabaseDate);
            
            if (sInputDate.compareTo(sDatabaseDate) < 0){
                System.out.println("b");
                JOptionPane.showMessageDialog(null, "Data from " + sIDate + " is not available." );
                return;
            }
            else if (eInputDate.compareTo(eDatabaseDate) > 0){
                JOptionPane.showMessageDialog(null, "Data from " + eIDate + " is not available.");
                return;
            }
            System.out.println("c"); 
            ArrayList<datum> values = manager.convertToList(sYear, sMonth, sDay, sHour, eYear, eMonth, eDay, eHour);
            
            TemperatureCharter tempchart = new TemperatureCharter(values);
            tempchart.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(User_Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(User_Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }//GEN-LAST:event_TempButtActionPerformed

    private void HumButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HumButtActionPerformed
                try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy MM dd HH");
            
            String startDate = manager.handler.getStartData();
            String endDate = manager.handler.getEndData();
            
            Date sDatabaseDate = sdf.parse(startDate);
            Date eDatabaseDate = sdf.parse(endDate);
                       
            String sYear = StartYear.getText();
            String sMonth = StartMonth.getText();
            String sDay = StartDay.getText();
            String sHour = StartHour.getText();
            
            String eYear = EndYear.getText();
            String eMonth = EndMonth.getText();
            String eDay = EndDay.getText();
            String eHour = EndHour.getText();
            
            String sIDate = sYear + " " + sMonth + " " + sDay + " " + sHour;
            String eIDate = eYear + " " + eMonth + " " + eDay + " " + eHour;
                    
            Date sInputDate = sdf.parse(sIDate);
            Date eInputDate = sdf.parse(eIDate);
            
            System.out.println(sInputDate + "     " + sDatabaseDate);
            System.out.println(eInputDate + "     " + eDatabaseDate);
            
            if (sInputDate.compareTo(sDatabaseDate) < 0){
                System.out.println("b");
                JOptionPane.showMessageDialog(null, "Data from " + sIDate + " is not available." );
                return;
            }
            else if (eInputDate.compareTo(eDatabaseDate) > 0){
                JOptionPane.showMessageDialog(null, "Data from " + eIDate + " is not available.");
                return;
            }
            System.out.println("c"); 
            ArrayList<datum> values = manager.convertToList(sYear, sMonth, sDay, sHour, eYear, eMonth, eDay, eHour);
            
            HumidityCharter humchart = new HumidityCharter(values);
            humchart.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(User_Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(User_Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }//GEN-LAST:event_HumButtActionPerformed

    private void EndHourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndHourActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EndHourActionPerformed

    private void StartHourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartHourActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StartHourActionPerformed

    private void newDataGetterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDataGetterActionPerformed
        
        try {
            manager.retrieveTXTData();
            JOptionPane.showMessageDialog(null, "Data successfully imported!");
        } catch (SQLException ex) {
            Logger.getLogger(User_Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(User_Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_newDataGetterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User_Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EndDay;
    private javax.swing.JTextField EndHour;
    private javax.swing.JTextField EndMonth;
    private javax.swing.JTextField EndYear;
    private javax.swing.JButton HumButt;
    private javax.swing.JTextField StartDay;
    private javax.swing.JTextField StartHour;
    private javax.swing.JTextField StartMonth;
    private javax.swing.JTextField StartYear;
    private javax.swing.JButton TempButt;
    private javax.swing.JTextPane Title_Text;
    private javax.swing.JLabel dayLabel;
    private javax.swing.JLabel hourLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private javax.swing.JLabel monthLabel;
    private javax.swing.JButton newDataGetter;
    private javax.swing.JLabel yearLabel;
    // End of variables declaration//GEN-END:variables
}
